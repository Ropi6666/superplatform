/**
 * Singulatron
 * AI management and development platform.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DatastoreContainsMatch } from './datastoreContainsMatch';
import { DatastoreEqualsMatch } from './datastoreEqualsMatch';
import { DatastoreFieldSelector } from './datastoreFieldSelector';
import { DatastoreIntersectsMatch } from './datastoreIntersectsMatch';
import { DatastoreStartsWithMatch } from './datastoreStartsWithMatch';
export declare class DatastoreFilter {
    /**
    * All condition returns all objects.
    */
    'all'?: object;
    /**
    * Contains condition returns all objects where the field(s) values contain a particular string or slice element.
    */
    'contains'?: DatastoreContainsMatch;
    /**
    * Equals condition returns objects where value of a field equals (=) to the specified value in the query.
    */
    'equal'?: DatastoreEqualsMatch;
    /**
    * Intersects condition returns objects where the slice value of a field intersects with the slice value in the query.
    */
    'intersects'?: DatastoreIntersectsMatch;
    'selector'?: DatastoreFieldSelector;
    /**
    * StartsWith condition returns all objects where the field(s) values start with a particular string.
    */
    'startsWith'?: DatastoreStartsWithMatch;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
