/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { DockerSvcContainerIsRunningResponse, DockerSvcGetContainerSummaryResponse, DockerSvcGetDockerHostResponse, DockerSvcGetInfoResponse, DockerSvcRunContainerRequest, DockerSvcRunContainerResponse } from '../models/index';
export interface ContainerIsRunningRequest {
    hash: string;
}
export interface GetContainerSummaryRequest {
    hash: string;
    numberOfLines: number;
}
export interface RunContainerRequest {
    request: DockerSvcRunContainerRequest;
}
/**
 *
 */
export declare class DockerSvcApi extends runtime.BaseAPI {
    /**
     * Check if a Docker container identified by the hash is running
     * Check If a Container Is Running
     */
    containerIsRunningRaw(requestParameters: ContainerIsRunningRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcContainerIsRunningResponse>>;
    /**
     * Check if a Docker container identified by the hash is running
     * Check If a Container Is Running
     */
    containerIsRunning(requestParameters: ContainerIsRunningRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcContainerIsRunningResponse>;
    /**
     * Get a summary of the Docker container identified by the hash, limited to a specified number of lines
     * Get Container Summary
     */
    getContainerSummaryRaw(requestParameters: GetContainerSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcGetContainerSummaryResponse>>;
    /**
     * Get a summary of the Docker container identified by the hash, limited to a specified number of lines
     * Get Container Summary
     */
    getContainerSummary(requestParameters: GetContainerSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcGetContainerSummaryResponse>;
    /**
     * Retrieve information about the Docker host
     * Get Docker Host
     */
    getHostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcGetDockerHostResponse>>;
    /**
     * Retrieve information about the Docker host
     * Get Docker Host
     */
    getHost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcGetDockerHostResponse>;
    /**
     * Retrieve detailed information about the Docker service
     * Get Docker Service Information
     */
    getInfoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcGetInfoResponse>>;
    /**
     * Retrieve detailed information about the Docker service
     * Get Docker Service Information
     */
    getInfo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcGetInfoResponse>;
    /**
     * Runes a Docker container with the specified parameters.  Requires the `docker-svc:docker:create` permission.
     * Run a Container
     */
    runContainerRaw(requestParameters: RunContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcRunContainerResponse>>;
    /**
     * Runes a Docker container with the specified parameters.  Requires the `docker-svc:docker:create` permission.
     * Run a Container
     */
    runContainer(requestParameters: RunContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcRunContainerResponse>;
}
