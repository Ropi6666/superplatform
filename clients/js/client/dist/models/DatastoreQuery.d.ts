/**
 * Singulatron
 * AI management and development platform.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DatastoreFilter } from './DatastoreFilter';
import type { DatastoreOrderBy } from './DatastoreOrderBy';
/**
 *
 * @export
 * @interface DatastoreQuery
 */
export interface DatastoreQuery {
    /**
     * After is used for paginations. Instead of offset-based pagination,
     * we support cursor-based pagination because it works better in a scalable,
     * distributed environment.
     * @type {Array<object>}
     * @memberof DatastoreQuery
     */
    after?: Array<object>;
    /**
     * Count true means return the count of the dataset filtered by Filters
     * without after or limit.
     * @type {boolean}
     * @memberof DatastoreQuery
     */
    count?: boolean;
    /**
     * Filters are filtering options of a query. It is advised to use
     * It's advised to use helper functions in your respective client library such as filter constructors (`all`, `equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.
     * @type {Array<DatastoreFilter>}
     * @memberof DatastoreQuery
     */
    filters?: Array<DatastoreFilter>;
    /**
     * Limit the number of records in the result set.
     * @type {number}
     * @memberof DatastoreQuery
     */
    limit?: number;
    /**
     * OrderBys order the result set.
     * @type {Array<DatastoreOrderBy>}
     * @memberof DatastoreQuery
     */
    orderBys?: Array<DatastoreOrderBy>;
}
/**
 * Check if a given object implements the DatastoreQuery interface.
 */
export declare function instanceOfDatastoreQuery(value: object): value is DatastoreQuery;
export declare function DatastoreQueryFromJSON(json: any): DatastoreQuery;
export declare function DatastoreQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatastoreQuery;
export declare function DatastoreQueryToJSON(value?: DatastoreQuery | null): any;
