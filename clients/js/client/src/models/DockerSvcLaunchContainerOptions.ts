/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * AI management and development platform.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DockerSvcLaunchContainerOptions
 */
export interface DockerSvcLaunchContainerOptions {
    /**
     * Asset is a map of envar name to file URL.
     * eg. {"MODEL": "https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.2-GGUF/resolve/main/mistral-7b-instruct-v0.2.Q2_K.gguf"}
     * This file will be downloaded with the Download Svc and the local file will be mounted in the container
     * and the envar `MODEL=/local/path/to/file` will be available in the container launched by the Docker Svc.
     * @type {{ [key: string]: string; }}
     * @memberof DockerSvcLaunchContainerOptions
     */
    assets?: { [key: string]: string; };
    /**
     * 
     * @type {Array<string>}
     * @memberof DockerSvcLaunchContainerOptions
     */
    envs?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof DockerSvcLaunchContainerOptions
     */
    gpuEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DockerSvcLaunchContainerOptions
     */
    hash?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof DockerSvcLaunchContainerOptions
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof DockerSvcLaunchContainerOptions
     */
    name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DockerSvcLaunchContainerOptions
     */
    persistentPaths?: Array<string>;
}

/**
 * Check if a given object implements the DockerSvcLaunchContainerOptions interface.
 */
export function instanceOfDockerSvcLaunchContainerOptions(value: object): value is DockerSvcLaunchContainerOptions {
    return true;
}

export function DockerSvcLaunchContainerOptionsFromJSON(json: any): DockerSvcLaunchContainerOptions {
    return DockerSvcLaunchContainerOptionsFromJSONTyped(json, false);
}

export function DockerSvcLaunchContainerOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DockerSvcLaunchContainerOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'assets': json['assets'] == null ? undefined : json['assets'],
        'envs': json['envs'] == null ? undefined : json['envs'],
        'gpuEnabled': json['gpuEnabled'] == null ? undefined : json['gpuEnabled'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'labels': json['labels'] == null ? undefined : json['labels'],
        'name': json['name'] == null ? undefined : json['name'],
        'persistentPaths': json['persistentPaths'] == null ? undefined : json['persistentPaths'],
    };
}

export function DockerSvcLaunchContainerOptionsToJSON(value?: DockerSvcLaunchContainerOptions | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'assets': value['assets'],
        'envs': value['envs'],
        'gpuEnabled': value['gpuEnabled'],
        'hash': value['hash'],
        'labels': value['labels'],
        'name': value['name'],
        'persistentPaths': value['persistentPaths'],
    };
}

