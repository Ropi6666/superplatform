/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegistrySvcRepositorySpec
 */
export interface RegistrySvcRepositorySpec {
    /**
     * Branch is the branch to use for the repository
     * @type {string}
     * @memberof RegistrySvcRepositorySpec
     */
    subfolder?: string;
    /**
     * URL is the URL to the repository
     * @type {string}
     * @memberof RegistrySvcRepositorySpec
     */
    url: string;
}

/**
 * Check if a given object implements the RegistrySvcRepositorySpec interface.
 */
export function instanceOfRegistrySvcRepositorySpec(value: object): value is RegistrySvcRepositorySpec {
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function RegistrySvcRepositorySpecFromJSON(json: any): RegistrySvcRepositorySpec {
    return RegistrySvcRepositorySpecFromJSONTyped(json, false);
}

export function RegistrySvcRepositorySpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrySvcRepositorySpec {
    if (json == null) {
        return json;
    }
    return {
        
        'subfolder': json['subfolder'] == null ? undefined : json['subfolder'],
        'url': json['url'],
    };
}

export function RegistrySvcRepositorySpecToJSON(value?: RegistrySvcRepositorySpec | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'subfolder': value['subfolder'],
        'url': value['url'],
    };
}

