"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2652],{54160:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>q,contentTitle:()=>y,default:()=>T,frontMatter:()=>b,metadata:()=>v,toc:()=>N});var t=a(74848),r=a(28453),i=a(91366),n=a.n(i),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),m=a.n(d),p=(a(36683),a(81124)),c=a.n(p),h=a(60674),u=a.n(h),x=a(23397),g=a.n(x),j=(a(26651),a(51107)),f=(a(77675),a(19365));const b={id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},y=void 0,v={id:"singulatron/add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",source:"@site/docs/singulatron/add-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-prompt",permalink:"/docs/singulatron/add-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Upsert a Generic Object",permalink:"/docs/singulatron/upsert-a-generic-object"},next:{title:"List Prompts",permalink:"/docs/singulatron/list-prompts"}},q={},N=[];function M(e){const s={code:"code",p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Add Prompt"}),"\n",(0,t.jsx)(o(),{method:"post",path:"/prompt/add"}),"\n",(0,t.jsxs)(s.p,{children:["Adds a new prompt to the prompt queue and either waits for the response (if ",(0,t.jsx)(s.code,{children:"sync"})," is set to true), or returns immediately."]}),"\n",(0,t.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,t.jsx)(m(),{className:"openapi-tabs__mime",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,t.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,t.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,t.jsx)(s.p,{children:"Body"})}),(0,t.jsx)("strong",{className:"openapi-schema__required",children:(0,t.jsx)(s.p,{children:"required"})})]}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,t.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,t.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}})]})]})})}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("div",{children:(0,t.jsxs)(n(),{label:void 0,id:void 0,children:[(0,t.jsxs)(f.default,{label:"200",value:"200",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"OK"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,t.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,t.jsx)("summary",{style:{},children:(0,t.jsxs)("span",{className:"openapi-schema__container",children:[(0,t.jsx)("strong",{className:"openapi-schema__property",children:(0,t.jsx)(s.p,{children:"prompt"})}),(0,t.jsx)("span",{className:"openapi-schema__name",children:(0,t.jsx)(s.p,{children:"object"})})]})}),(0,t.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 10,\n    "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n    "prompt": "What\'s a banana?",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "[INST]{prompt}[/INST]",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"400",value:"400",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Invalid JSON"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"401",value:"401",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Unauthorized"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"500",value:"500",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Internal Server Error"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function T(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(M,{...e})}):M(e)}}}]);