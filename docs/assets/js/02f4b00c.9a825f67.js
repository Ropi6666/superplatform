"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[110],{59280:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>v,contentTitle:()=>b,default:()=>M,frontMatter:()=>y,metadata:()=>N,toc:()=>q});var i=a(74848),r=a(28453),t=a(91366),n=a.n(t),l=(a(6050),a(57742)),d=a.n(l),o=(a(67792),a(27362)),c=a.n(o),m=(a(36683),a(81124)),p=a.n(m),h=a(60674),u=a.n(h),x=a(23397),j=a.n(x),f=(a(26651),a(51107)),g=(a(77675),a(19365));const y={id:"get-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},b=void 0,N={id:"singulatron/get-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",source:"@site/docs/singulatron/get-prompts.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/get-prompts",permalink:"/docs/singulatron/get-prompts",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Add Prompt",permalink:"/docs/singulatron/add-prompt"},next:{title:"Remove Prompt",permalink:"/docs/singulatron/remove-prompt"}},v={},q=[];function S(e){const s={code:"code",p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"List Prompts"}),"\n",(0,i.jsx)(d(),{method:"post",path:"/prompt-svc/prompts"}),"\n",(0,i.jsx)(s.p,{children:"List prompts that satisfy a query."}),"\n",(0,i.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(c(),{className:"openapi-tabs__mime",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"List Prompts Request"})})}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"query"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"after",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}).",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"filters"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsxs)(s.p,{children:["Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (",(0,i.jsx)(s.code,{children:"all"}),", ",(0,i.jsx)(s.code,{children:"equal"}),", ",(0,i.jsx)(s.code,{children:"contains"}),", ",(0,i.jsx)(s.code,{children:"startsWith"}),") and field selectors (",(0,i.jsx)(s.code,{children:"field"}),", ",(0,i.jsx)(s.code,{children:"fields"}),", ",(0,i.jsx)(s.code,{children:"id"}),") for easier access."]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"fields",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{items:{type:"string"},type:"array"}}),(0,i.jsx)(u(),{collapsible:!1,name:"jsonValues",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"op",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`equals`, `containsSubstring`, `startsWith`, `intersects`, `isInList`]",schema:{enum:["equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(u(),{collapsible:!1,name:"limit",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"Limit the number of records in the result set.",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"orderBys"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"OrderBys order the result set."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"desc",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"field",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The field by which to order the results",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"randomize",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})})})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(g.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"OK"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"after",required:!1,schemaName:"",qualifierMessage:void 0,schema:{}}),(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"prompts"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,i.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "after": {},\n  "count": 0,\n  "prompts": [\n    {\n      "createdAt": "string",\n      "error": "string",\n      "id": "string",\n      "lastRun": "string",\n      "maxRetries": 10,\n      "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n      "prompt": "What\'s a banana?",\n      "runCount": 0,\n      "status": "scheduled",\n      "sync": true,\n      "template": "[INST]{prompt}[/INST]",\n      "threadId": "string",\n      "updatedAt": "string",\n      "userId": "string"\n    }\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(g.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Invalid JSON"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(g.default,{label:"401",value:"401",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Unauthorized"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(g.default,{label:"500",value:"500",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Internal Server Error"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function M(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(S,{...e})}):S(e)}}}]);